# coding: utf-8

"""
    Astro Registry API

    Astro Registry API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomerregistry
from astronomerregistry.models.dag_filters import DagFilters  # noqa: E501
from astronomerregistry.rest import ApiException

class TestDagFilters(unittest.TestCase):
    """DagFilters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DagFilters
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DagFilters`
        """
        model = astronomerregistry.models.dag_filters.DagFilters()  # noqa: E501
        if include_optional :
            return DagFilters(
                badges = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ], 
                categories = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ], 
                modules = [
                    astronomerregistry.models.short_module.ShortModule(
                        display_name = '', 
                        logo = '', 
                        name = '', 
                        provider_search_id = '', 
                        search_id = '', )
                    ], 
                providers = [
                    astronomerregistry.models.short_provider.ShortProvider(
                        display_name = '', 
                        logo = '', 
                        name = '', 
                        search_id = '', )
                    ], 
                tiers = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ]
            )
        else :
            return DagFilters(
                badges = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ],
                categories = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ],
                modules = [
                    astronomerregistry.models.short_module.ShortModule(
                        display_name = '', 
                        logo = '', 
                        name = '', 
                        provider_search_id = '', 
                        search_id = '', )
                    ],
                providers = [
                    astronomerregistry.models.short_provider.ShortProvider(
                        display_name = '', 
                        logo = '', 
                        name = '', 
                        search_id = '', )
                    ],
                tiers = [
                    astronomerregistry.models.short_label.ShortLabel(
                        description = '', 
                        id = '', 
                        name = '', )
                    ],
        )
        """

    def testDagFilters(self):
        """Test DagFilters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
