# coding: utf-8

"""
    Astro Registry API

    Astro Registry API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomerregistry
from astronomerregistry.models.dags_paginated import DagsPaginated  # noqa: E501
from astronomerregistry.rest import ApiException

class TestDagsPaginated(unittest.TestCase):
    """DagsPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DagsPaginated
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DagsPaginated`
        """
        model = astronomerregistry.models.dags_paginated.DagsPaginated()  # noqa: E501
        if include_optional :
            return DagsPaginated(
                dags = [
                    astronomerregistry.models.dag.Dag(
                        badges = [
                            astronomerregistry.models.short_label.ShortLabel(
                                description = '', 
                                id = '', 
                                name = '', )
                            ], 
                        categories = [
                            astronomerregistry.models.short_label.ShortLabel(
                                description = '', 
                                id = '', 
                                name = '', )
                            ], 
                        created_at = '', 
                        created_by = '', 
                        description = '', 
                        display_name = '', 
                        documentation = '', 
                        file_path = '', 
                        github_raw_dockerfile_url = '', 
                        github_raw_requirements_url = '', 
                        github_raw_source_url = '', 
                        github_repository_url = '', 
                        github_source_url = '', 
                        is_certified = True, 
                        is_cloud_ide_compatible = True, 
                        is_display_name_manual = True, 
                        is_featured = True, 
                        is_global = True, 
                        is_latest_version = True, 
                        is_logo_manual = True, 
                        is_private = True, 
                        logo = '', 
                        modules = [
                            astronomerregistry.models.short_module.ShortModule(
                                display_name = '', 
                                logo = '', 
                                name = '', 
                                provider_search_id = '', 
                                search_id = '', )
                            ], 
                        name = '', 
                        organization_id = '', 
                        other_versions = [
                            ''
                            ], 
                        providers = [
                            astronomerregistry.models.short_provider.ShortProvider(
                                display_name = '', 
                                logo = '', 
                                name = '', 
                                search_id = '', )
                            ], 
                        repository_name = '', 
                        repository_owner = '', 
                        search_id = '', 
                        search_rank = 56, 
                        short_name_id = '', 
                        social_stats = astronomerregistry.models.social_stats.SocialStats(
                            stars = 56, 
                            views = 56, ), 
                        task_dependency_tree = [
                            astronomerregistry.models.task_dependency_tree.TaskDependencyTree(
                                children = [
                                    astronomerregistry.models.task_dependency_tree.TaskDependencyTree(
                                        children = [
                                            
                                            ], 
                                        data = astronomerregistry.models.task_dependency.TaskDependency(
                                            operator = '', 
                                            provider = '', 
                                            version = '', ), 
                                        id = '', 
                                        task_group = '', )
                                    ], 
                                data = astronomerregistry.models.task_dependency.TaskDependency(
                                    operator = '', 
                                    provider = '', 
                                    version = '', ), 
                                id = '', 
                                task_group = '', )
                            ], 
                        tiers = [
                            
                            ], 
                        type = '', 
                        updated_at = '', 
                        updated_by = '', 
                        version = '', )
                    ], 
                filters = astronomerregistry.models.dag_filters.DagFilters(
                    badges = [
                        astronomerregistry.models.short_label.ShortLabel(
                            description = '', 
                            id = '', 
                            name = '', )
                        ], 
                    categories = [
                        astronomerregistry.models.short_label.ShortLabel(
                            description = '', 
                            id = '', 
                            name = '', )
                        ], 
                    modules = [
                        astronomerregistry.models.short_module.ShortModule(
                            display_name = '', 
                            logo = '', 
                            name = '', 
                            provider_search_id = '', 
                            search_id = '', )
                        ], 
                    providers = [
                        astronomerregistry.models.short_provider.ShortProvider(
                            display_name = '', 
                            logo = '', 
                            name = '', 
                            search_id = '', )
                        ], 
                    tiers = [
                        
                        ], ), 
                limit = 56, 
                offset = 56, 
                total_count = 56
            )
        else :
            return DagsPaginated(
                dags = [
                    astronomerregistry.models.dag.Dag(
                        badges = [
                            astronomerregistry.models.short_label.ShortLabel(
                                description = '', 
                                id = '', 
                                name = '', )
                            ], 
                        categories = [
                            astronomerregistry.models.short_label.ShortLabel(
                                description = '', 
                                id = '', 
                                name = '', )
                            ], 
                        created_at = '', 
                        created_by = '', 
                        description = '', 
                        display_name = '', 
                        documentation = '', 
                        file_path = '', 
                        github_raw_dockerfile_url = '', 
                        github_raw_requirements_url = '', 
                        github_raw_source_url = '', 
                        github_repository_url = '', 
                        github_source_url = '', 
                        is_certified = True, 
                        is_cloud_ide_compatible = True, 
                        is_display_name_manual = True, 
                        is_featured = True, 
                        is_global = True, 
                        is_latest_version = True, 
                        is_logo_manual = True, 
                        is_private = True, 
                        logo = '', 
                        modules = [
                            astronomerregistry.models.short_module.ShortModule(
                                display_name = '', 
                                logo = '', 
                                name = '', 
                                provider_search_id = '', 
                                search_id = '', )
                            ], 
                        name = '', 
                        organization_id = '', 
                        other_versions = [
                            ''
                            ], 
                        providers = [
                            astronomerregistry.models.short_provider.ShortProvider(
                                display_name = '', 
                                logo = '', 
                                name = '', 
                                search_id = '', )
                            ], 
                        repository_name = '', 
                        repository_owner = '', 
                        search_id = '', 
                        search_rank = 56, 
                        short_name_id = '', 
                        social_stats = astronomerregistry.models.social_stats.SocialStats(
                            stars = 56, 
                            views = 56, ), 
                        task_dependency_tree = [
                            astronomerregistry.models.task_dependency_tree.TaskDependencyTree(
                                children = [
                                    astronomerregistry.models.task_dependency_tree.TaskDependencyTree(
                                        children = [
                                            
                                            ], 
                                        data = astronomerregistry.models.task_dependency.TaskDependency(
                                            operator = '', 
                                            provider = '', 
                                            version = '', ), 
                                        id = '', 
                                        task_group = '', )
                                    ], 
                                data = astronomerregistry.models.task_dependency.TaskDependency(
                                    operator = '', 
                                    provider = '', 
                                    version = '', ), 
                                id = '', 
                                task_group = '', )
                            ], 
                        tiers = [
                            
                            ], 
                        type = '', 
                        updated_at = '', 
                        updated_by = '', 
                        version = '', )
                    ],
                filters = astronomerregistry.models.dag_filters.DagFilters(
                    badges = [
                        astronomerregistry.models.short_label.ShortLabel(
                            description = '', 
                            id = '', 
                            name = '', )
                        ], 
                    categories = [
                        astronomerregistry.models.short_label.ShortLabel(
                            description = '', 
                            id = '', 
                            name = '', )
                        ], 
                    modules = [
                        astronomerregistry.models.short_module.ShortModule(
                            display_name = '', 
                            logo = '', 
                            name = '', 
                            provider_search_id = '', 
                            search_id = '', )
                        ], 
                    providers = [
                        astronomerregistry.models.short_provider.ShortProvider(
                            display_name = '', 
                            logo = '', 
                            name = '', 
                            search_id = '', )
                        ], 
                    tiers = [
                        
                        ], ),
                limit = 56,
                offset = 56,
                total_count = 56,
        )
        """

    def testDagsPaginated(self):
        """Test DagsPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
