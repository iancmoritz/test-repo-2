# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.runtime import Runtime  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestRuntime(unittest.TestCase):
    """Runtime unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Runtime
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Runtime`
        """
        model = astronomercoreapi.models.runtime.Runtime()  # noqa: E501
        if include_optional :
            return Runtime(
                api_capabilities = astronomercoreapi.models.runtime_api_capabilities.RuntimeApiCapabilities(
                    can_clear_dag_run = True, 
                    can_update_task_instance = True, ), 
                cluster_id = '', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                description = '', 
                id = '', 
                name = '', 
                organization_id = '', 
                release_name = '', 
                runtime_version = '', 
                type = 'HYBRID', 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                workspace_id = ''
            )
        else :
            return Runtime(
                api_capabilities = astronomercoreapi.models.runtime_api_capabilities.RuntimeApiCapabilities(
                    can_clear_dag_run = True, 
                    can_update_task_instance = True, ),
                cluster_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                id = '',
                name = '',
                organization_id = '',
                release_name = '',
                type = 'HYBRID',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                workspace_id = '',
        )
        """

    def testRuntime(self):
        """Test Runtime"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
