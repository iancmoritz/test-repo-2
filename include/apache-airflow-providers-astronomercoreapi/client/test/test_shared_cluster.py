# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.shared_cluster import SharedCluster  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestSharedCluster(unittest.TestCase):
    """SharedCluster unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SharedCluster
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SharedCluster`
        """
        model = astronomercoreapi.models.shared_cluster.SharedCluster()  # noqa: E501
        if include_optional :
            return SharedCluster(
                cloud_provider = 'aws', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                db_instance_type = '', 
                id = '', 
                is_cordoned = True, 
                is_dry_run = True, 
                metadata = astronomercoreapi.models.cluster_metadata.ClusterMetadata(
                    external_ips = [
                        ''
                        ], ), 
                name = '', 
                pod_subnet_range = '', 
                region = '', 
                service_peering_range = '', 
                service_subnet_range = '', 
                status = 'CREATING', 
                template_version = '', 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                vpc_subnet_range = ''
            )
        else :
            return SharedCluster(
                cloud_provider = 'aws',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                db_instance_type = '',
                id = '',
                is_dry_run = True,
                metadata = astronomercoreapi.models.cluster_metadata.ClusterMetadata(
                    external_ips = [
                        ''
                        ], ),
                name = '',
                pod_subnet_range = '',
                region = '',
                service_peering_range = '',
                service_subnet_range = '',
                status = 'CREATING',
                template_version = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                vpc_subnet_range = '',
        )
        """

    def testSharedCluster(self):
        """Test SharedCluster"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
