# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.virtual_runtimes_paginated import VirtualRuntimesPaginated  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestVirtualRuntimesPaginated(unittest.TestCase):
    """VirtualRuntimesPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VirtualRuntimesPaginated
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualRuntimesPaginated`
        """
        model = astronomercoreapi.models.virtual_runtimes_paginated.VirtualRuntimesPaginated()  # noqa: E501
        if include_optional :
            return VirtualRuntimesPaginated(
                limit = 56, 
                offset = 56, 
                total_count = 56, 
                virtual_runtimes = [
                    astronomercoreapi.models.virtual_runtime.VirtualRuntime(
                        base_image = '', 
                        cluster_id = '', 
                        connections = [
                            astronomercoreapi.models.connection.Connection(
                                connection_name = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                                    api_token_name = '', 
                                    avatar_url = '', 
                                    full_name = '', 
                                    id = '', 
                                    subject_type = 'USER', 
                                    username = '', ), 
                                extra = {
                                    'key' : ''
                                    }, 
                                host = '', 
                                id = '', 
                                login = '', 
                                password = '', 
                                port = 56, 
                                schema = '', 
                                type = '', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                                    api_token_name = '', 
                                    avatar_url = '', 
                                    full_name = '', 
                                    id = '', 
                                    subject_type = 'USER', 
                                    username = '', ), )
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_user = , 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        id = '', 
                        name = '', 
                        organization_id = '', 
                        organization_name = '', 
                        organization_short_name = '', 
                        release_name = '', 
                        requirements = [
                            ''
                            ], 
                        requirements_validate_status = '', 
                        runtime_version = '', 
                        task_mem_gib = 1.337, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by_user = , 
                        variables = [
                            astronomercoreapi.models.vr_variable.VRVariable(
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_by_user = , 
                                is_secret = True, 
                                key = '', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_by_user = , 
                                value = '', )
                            ], 
                        web_server_ingress_hostname = '', 
                        web_server_url = '', 
                        workspace_id = '', 
                        workspace_name = '', )
                    ]
            )
        else :
            return VirtualRuntimesPaginated(
                limit = 56,
                offset = 56,
                total_count = 56,
                virtual_runtimes = [
                    astronomercoreapi.models.virtual_runtime.VirtualRuntime(
                        base_image = '', 
                        cluster_id = '', 
                        connections = [
                            astronomercoreapi.models.connection.Connection(
                                connection_name = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                                    api_token_name = '', 
                                    avatar_url = '', 
                                    full_name = '', 
                                    id = '', 
                                    subject_type = 'USER', 
                                    username = '', ), 
                                extra = {
                                    'key' : ''
                                    }, 
                                host = '', 
                                id = '', 
                                login = '', 
                                password = '', 
                                port = 56, 
                                schema = '', 
                                type = '', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                                    api_token_name = '', 
                                    avatar_url = '', 
                                    full_name = '', 
                                    id = '', 
                                    subject_type = 'USER', 
                                    username = '', ), )
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_user = , 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        id = '', 
                        name = '', 
                        organization_id = '', 
                        organization_name = '', 
                        organization_short_name = '', 
                        release_name = '', 
                        requirements = [
                            ''
                            ], 
                        requirements_validate_status = '', 
                        runtime_version = '', 
                        task_mem_gib = 1.337, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by_user = , 
                        variables = [
                            astronomercoreapi.models.vr_variable.VRVariable(
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_by_user = , 
                                is_secret = True, 
                                key = '', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_by_user = , 
                                value = '', )
                            ], 
                        web_server_ingress_hostname = '', 
                        web_server_url = '', 
                        workspace_id = '', 
                        workspace_name = '', )
                    ],
        )
        """

    def testVirtualRuntimesPaginated(self):
        """Test VirtualRuntimesPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
