# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.cell import Cell  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestCell(unittest.TestCase):
    """Cell unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Cell
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Cell`
        """
        model = astronomercoreapi.models.cell.Cell()  # noqa: E501
        if include_optional :
            return Cell(
                cache = astronomercoreapi.models.cell_cache.CellCache(
                    applicable = True, 
                    available = True, 
                    dirty = True, 
                    dirty_reason = '', 
                    updated_at = '', ), 
                created_at = '', 
                created_by = '', 
                dependencies_explicit = [
                    ''
                    ], 
                id = '', 
                name = '', 
                organization_id = '', 
                pipeline_id = '', 
                project_id = '', 
                type = '', 
                type_config_forms = {
                    'key' : ''
                    }, 
                type_configs = None, 
                type_not_found = True, 
                updated_at = '', 
                updated_by = '', 
                workspace_id = ''
            )
        else :
            return Cell(
                cache = astronomercoreapi.models.cell_cache.CellCache(
                    applicable = True, 
                    available = True, 
                    dirty = True, 
                    dirty_reason = '', 
                    updated_at = '', ),
                created_at = '',
                created_by = '',
                dependencies_explicit = [
                    ''
                    ],
                id = '',
                name = '',
                organization_id = '',
                pipeline_id = '',
                project_id = '',
                type = '',
                type_configs = None,
                updated_at = '',
                updated_by = '',
                workspace_id = '',
        )
        """

    def testCell(self):
        """Test Cell"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
