# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.teams_paginated import TeamsPaginated  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestTeamsPaginated(unittest.TestCase):
    """TeamsPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TeamsPaginated
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TeamsPaginated`
        """
        model = astronomercoreapi.models.teams_paginated.TeamsPaginated()  # noqa: E501
        if include_optional :
            return TeamsPaginated(
                limit = 56, 
                offset = 56, 
                teams = [
                    astronomercoreapi.models.team.Team(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), 
                        description = '', 
                        id = '', 
                        is_idp_managed = True, 
                        members = [
                            astronomercoreapi.models.team_member.TeamMember(
                                avatar_url = '', 
                                created_at = '', 
                                full_name = '', 
                                user_id = '', 
                                username = '', )
                            ], 
                        members_count = 56, 
                        name = '', 
                        organization_id = '', 
                        organization_role = '', 
                        roles = [
                            astronomercoreapi.models.team_role.TeamRole(
                                entity_id = '', 
                                entity_type = '', 
                                role = '', )
                            ], 
                        roles_count = 56, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), )
                    ], 
                total_count = 56
            )
        else :
            return TeamsPaginated(
                limit = 56,
                offset = 56,
                teams = [
                    astronomercoreapi.models.team.Team(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), 
                        description = '', 
                        id = '', 
                        is_idp_managed = True, 
                        members = [
                            astronomercoreapi.models.team_member.TeamMember(
                                avatar_url = '', 
                                created_at = '', 
                                full_name = '', 
                                user_id = '', 
                                username = '', )
                            ], 
                        members_count = 56, 
                        name = '', 
                        organization_id = '', 
                        organization_role = '', 
                        roles = [
                            astronomercoreapi.models.team_role.TeamRole(
                                entity_id = '', 
                                entity_type = '', 
                                role = '', )
                            ], 
                        roles_count = 56, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), )
                    ],
                total_count = 56,
        )
        """

    def testTeamsPaginated(self):
        """Test TeamsPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
