# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.virtual_runtime import VirtualRuntime  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestVirtualRuntime(unittest.TestCase):
    """VirtualRuntime unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VirtualRuntime
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualRuntime`
        """
        model = astronomercoreapi.models.virtual_runtime.VirtualRuntime()  # noqa: E501
        if include_optional :
            return VirtualRuntime(
                base_image = '', 
                cluster_id = '', 
                connections = [
                    astronomercoreapi.models.connection.Connection(
                        connection_name = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), 
                        extra = {
                            'key' : ''
                            }, 
                        host = '', 
                        id = '', 
                        login = '', 
                        password = '', 
                        port = 56, 
                        schema = '', 
                        type = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), )
                    ], 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                    api_token_name = '', 
                    avatar_url = '', 
                    full_name = '', 
                    id = '', 
                    subject_type = 'USER', 
                    username = '', ), 
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                description = '', 
                id = '', 
                name = '', 
                organization_id = '', 
                organization_name = '', 
                organization_short_name = '', 
                release_name = '', 
                requirements = [
                    ''
                    ], 
                requirements_validate_status = '', 
                runtime_version = '', 
                task_mem_gib = 1.337, 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                    api_token_name = '', 
                    avatar_url = '', 
                    full_name = '', 
                    id = '', 
                    subject_type = 'USER', 
                    username = '', ), 
                variables = [
                    astronomercoreapi.models.vr_variable.VRVariable(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), 
                        is_secret = True, 
                        key = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                            api_token_name = '', 
                            avatar_url = '', 
                            full_name = '', 
                            id = '', 
                            subject_type = 'USER', 
                            username = '', ), 
                        value = '', )
                    ], 
                web_server_ingress_hostname = '', 
                web_server_url = '', 
                workspace_id = '', 
                workspace_name = ''
            )
        else :
            return VirtualRuntime(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                    api_token_name = '', 
                    avatar_url = '', 
                    full_name = '', 
                    id = '', 
                    subject_type = 'USER', 
                    username = '', ),
                description = '',
                id = '',
                name = '',
                release_name = '',
                task_mem_gib = 1.337,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_by_user = astronomercoreapi.models.basic_subject_profile.BasicSubjectProfile(
                    api_token_name = '', 
                    avatar_url = '', 
                    full_name = '', 
                    id = '', 
                    subject_type = 'USER', 
                    username = '', ),
                workspace_id = '',
        )
        """

    def testVirtualRuntime(self):
        """Test VirtualRuntime"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
