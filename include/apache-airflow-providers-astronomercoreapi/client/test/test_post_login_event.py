# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.post_login_event import PostLoginEvent  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestPostLoginEvent(unittest.TestCase):
    """PostLoginEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PostLoginEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostLoginEvent`
        """
        model = astronomercoreapi.models.post_login_event.PostLoginEvent()  # noqa: E501
        if include_optional :
            return PostLoginEvent(
                client = astronomercoreapi.models.event_client.EventClient(
                    client_id = '', 
                    metadata = { }, 
                    name = '', ), 
                connection = astronomercoreapi.models.event_connection.EventConnection(
                    id = '', 
                    metadata = astronomercoreapi.models.metadata.metadata(), 
                    name = '', 
                    strategy = '', ), 
                organization = astronomercoreapi.models.event_organization.EventOrganization(
                    display_name = '', 
                    id = '', 
                    metadata = { }, 
                    name = '', ), 
                request = astronomercoreapi.models.event_request.EventRequest(
                    body = { }, 
                    geoip = astronomercoreapi.models.geoip.geoip(), 
                    hostname = '', 
                    ip = '', 
                    language = '', 
                    method = '', 
                    query = { }, 
                    user_agent = '', ), 
                transaction = { }, 
                user = astronomercoreapi.models.event_user.EventUser(
                    app_metadata = { }, 
                    created_at = '', 
                    email = '', 
                    email_verified = True, 
                    family_name = '', 
                    given_name = '', 
                    identities = [
                        None
                        ], 
                    last_password_reset = '', 
                    multifactor = [
                        ''
                        ], 
                    name = '', 
                    nickname = '', 
                    phone_number = '', 
                    phone_verified = True, 
                    picture = '', 
                    updated_at = '', 
                    user_id = '', 
                    user_metadata = { }, 
                    username = '', )
            )
        else :
            return PostLoginEvent(
                connection = astronomercoreapi.models.event_connection.EventConnection(
                    id = '', 
                    metadata = astronomercoreapi.models.metadata.metadata(), 
                    name = '', 
                    strategy = '', ),
                user = astronomercoreapi.models.event_user.EventUser(
                    app_metadata = { }, 
                    created_at = '', 
                    email = '', 
                    email_verified = True, 
                    family_name = '', 
                    given_name = '', 
                    identities = [
                        None
                        ], 
                    last_password_reset = '', 
                    multifactor = [
                        ''
                        ], 
                    name = '', 
                    nickname = '', 
                    phone_number = '', 
                    phone_verified = True, 
                    picture = '', 
                    updated_at = '', 
                    user_id = '', 
                    user_metadata = { }, 
                    username = '', ),
        )
        """

    def testPostLoginEvent(self):
        """Test PostLoginEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
