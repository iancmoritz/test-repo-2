# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.validate_sso_login_request import ValidateSsoLoginRequest  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestValidateSsoLoginRequest(unittest.TestCase):
    """ValidateSsoLoginRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ValidateSsoLoginRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValidateSsoLoginRequest`
        """
        model = astronomercoreapi.models.validate_sso_login_request.ValidateSsoLoginRequest()  # noqa: E501
        if include_optional :
            return ValidateSsoLoginRequest(
                event = astronomercoreapi.models.post_login_event.PostLoginEvent(
                    client = astronomercoreapi.models.event_client.EventClient(
                        client_id = '', 
                        metadata = { }, 
                        name = '', ), 
                    connection = astronomercoreapi.models.event_connection.EventConnection(
                        id = '', 
                        name = '', 
                        strategy = '', ), 
                    organization = astronomercoreapi.models.event_organization.EventOrganization(
                        display_name = '', 
                        id = '', 
                        name = '', ), 
                    request = astronomercoreapi.models.event_request.EventRequest(
                        body = { }, 
                        geoip = astronomercoreapi.models.geoip.geoip(), 
                        hostname = '', 
                        ip = '', 
                        language = '', 
                        method = '', 
                        query = { }, 
                        user_agent = '', ), 
                    transaction = { }, 
                    user = astronomercoreapi.models.event_user.EventUser(
                        app_metadata = { }, 
                        created_at = '', 
                        email = '', 
                        email_verified = True, 
                        family_name = '', 
                        given_name = '', 
                        identities = [
                            None
                            ], 
                        last_password_reset = '', 
                        multifactor = [
                            ''
                            ], 
                        name = '', 
                        nickname = '', 
                        phone_number = '', 
                        phone_verified = True, 
                        picture = '', 
                        updated_at = '', 
                        user_id = '', 
                        user_metadata = { }, 
                        username = '', ), )
            )
        else :
            return ValidateSsoLoginRequest(
                event = astronomercoreapi.models.post_login_event.PostLoginEvent(
                    client = astronomercoreapi.models.event_client.EventClient(
                        client_id = '', 
                        metadata = { }, 
                        name = '', ), 
                    connection = astronomercoreapi.models.event_connection.EventConnection(
                        id = '', 
                        name = '', 
                        strategy = '', ), 
                    organization = astronomercoreapi.models.event_organization.EventOrganization(
                        display_name = '', 
                        id = '', 
                        name = '', ), 
                    request = astronomercoreapi.models.event_request.EventRequest(
                        body = { }, 
                        geoip = astronomercoreapi.models.geoip.geoip(), 
                        hostname = '', 
                        ip = '', 
                        language = '', 
                        method = '', 
                        query = { }, 
                        user_agent = '', ), 
                    transaction = { }, 
                    user = astronomercoreapi.models.event_user.EventUser(
                        app_metadata = { }, 
                        created_at = '', 
                        email = '', 
                        email_verified = True, 
                        family_name = '', 
                        given_name = '', 
                        identities = [
                            None
                            ], 
                        last_password_reset = '', 
                        multifactor = [
                            ''
                            ], 
                        name = '', 
                        nickname = '', 
                        phone_number = '', 
                        phone_verified = True, 
                        picture = '', 
                        updated_at = '', 
                        user_id = '', 
                        user_metadata = { }, 
                        username = '', ), ),
        )
        """

    def testValidateSsoLoginRequest(self):
        """Test ValidateSsoLoginRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
