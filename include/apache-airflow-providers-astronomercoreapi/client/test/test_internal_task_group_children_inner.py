# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.internal_task_group_children_inner import InternalTaskGroupChildrenInner  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestInternalTaskGroupChildrenInner(unittest.TestCase):
    """InternalTaskGroupChildrenInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InternalTaskGroupChildrenInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InternalTaskGroupChildrenInner`
        """
        model = astronomercoreapi.models.internal_task_group_children_inner.InternalTaskGroupChildrenInner()  # noqa: E501
        if include_optional :
            return InternalTaskGroupChildrenInner(
                task = astronomercoreapi.models.internal_task.internal_Task(
                    extra_links = [
                        ''
                        ], 
                    has_outlet_datasets = True, 
                    id = '', 
                    is_mapped = True, 
                    label = '', 
                    operator = '', 
                    outlets = [
                        astronomercoreapi.models.internal_outlet.internal_Outlet(
                            extra = {
                                'key' : ''
                                }, 
                            type = '', 
                            uri = '', )
                        ], ), 
                task_group = astronomercoreapi.models.internal_task_group.internal_TaskGroup(
                    children = [
                        astronomercoreapi.models.internal_task_group_children_inner.internal_TaskGroupChildrenInner(
                            task = astronomercoreapi.models.internal_task.internal_Task(
                                extra_links = [
                                    ''
                                    ], 
                                has_outlet_datasets = True, 
                                id = '', 
                                is_mapped = True, 
                                label = '', 
                                operator = '', 
                                outlets = [
                                    astronomercoreapi.models.internal_outlet.internal_Outlet(
                                        extra = {
                                            'key' : ''
                                            }, 
                                        type = '', 
                                        uri = '', )
                                    ], ), )
                        ], 
                    id = '', 
                    is_mapped = True, 
                    label = '', 
                    tooltip = '', )
            )
        else :
            return InternalTaskGroupChildrenInner(
        )
        """

    def testInternalTaskGroupChildrenInner(self):
        """Test InternalTaskGroupChildrenInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
