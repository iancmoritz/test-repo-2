# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest

import astronomercoreapi
from astronomercoreapi.api.organization_api import OrganizationApi  # noqa: E501
from astronomercoreapi.rest import ApiException


class TestOrganizationApi(unittest.TestCase):
    """OrganizationApi unit test stubs"""

    def setUp(self):
        self.api = astronomercoreapi.api.organization_api.OrganizationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_managed_domain(self):
        """Test case for create_managed_domain

        Create managed domain  # noqa: E501
        """
        pass

    def test_create_organization(self):
        """Test case for create_organization

        Create organization  # noqa: E501
        """
        pass

    def test_create_sso_connection(self):
        """Test case for create_sso_connection

        Create SSO connection  # noqa: E501
        """
        pass

    def test_delete_managed_domain(self):
        """Test case for delete_managed_domain

        Delete managed domain  # noqa: E501
        """
        pass

    def test_delete_sso_bypass_key(self):
        """Test case for delete_sso_bypass_key

        Delete SSO bypass key  # noqa: E501
        """
        pass

    def test_delete_sso_connection(self):
        """Test case for delete_sso_connection

        Delete SSO connection  # noqa: E501
        """
        pass

    def test_get_managed_domain(self):
        """Test case for get_managed_domain

        Get managed domain  # noqa: E501
        """
        pass

    def test_get_organization(self):
        """Test case for get_organization

        Get organization  # noqa: E501
        """
        pass

    def test_get_organization_audit_logs(self):
        """Test case for get_organization_audit_logs

        Get organization audit logs  # noqa: E501
        """
        pass

    def test_get_sso_bypass_key(self):
        """Test case for get_sso_bypass_key

        Get SSO bypass key  # noqa: E501
        """
        pass

    def test_get_sso_connection(self):
        """Test case for get_sso_connection

        Get SSO connection  # noqa: E501
        """
        pass

    def test_list_managed_domains(self):
        """Test case for list_managed_domains

        List managed domains  # noqa: E501
        """
        pass

    def test_list_organization_auth_ids(self):
        """Test case for list_organization_auth_ids

        List organization auth IDs  # noqa: E501
        """
        pass

    def test_list_organizations(self):
        """Test case for list_organizations

        List organizations  # noqa: E501
        """
        pass

    def test_list_sso_connections(self):
        """Test case for list_sso_connections

        List SSO connections  # noqa: E501
        """
        pass

    def test_update_managed_domain(self):
        """Test case for update_managed_domain

        Update managed domain  # noqa: E501
        """
        pass

    def test_update_organization(self):
        """Test case for update_organization

        Update organization  # noqa: E501
        """
        pass

    def test_update_sso_connection(self):
        """Test case for update_sso_connection

        Update SSO connection  # noqa: E501
        """
        pass

    def test_upsert_sso_bypass_key(self):
        """Test case for upsert_sso_bypass_key

        Upsert SSO bypass key  # noqa: E501
        """
        pass

    def test_validate_sso_login(self):
        """Test case for validate_sso_login

        Validate SSO Login Callback  # noqa: E501
        """
        pass

    def test_verify_managed_domain(self):
        """Test case for verify_managed_domain

        Verify managed domain  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
