# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.update_pipeline_request import UpdatePipelineRequest  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestUpdatePipelineRequest(unittest.TestCase):
    """UpdatePipelineRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UpdatePipelineRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdatePipelineRequest`
        """
        model = astronomercoreapi.models.update_pipeline_request.UpdatePipelineRequest()  # noqa: E501
        if include_optional :
            return UpdatePipelineRequest(
                catchup = True, 
                cell_positions = [
                    ''
                    ], 
                concurrency = 0, 
                dag_run_timeout_seconds = 0, 
                default_args = astronomercoreapi.models.default_args_request.DefaultArgsRequest(
                    depends_on_past = True, 
                    email = [
                        ''
                        ], 
                    email_on_failure = True, 
                    email_on_retry = True, 
                    execution_timeout_seconds = 0, 
                    max_retry_delay_seconds = 0, 
                    queue = '', 
                    retries = 0, 
                    retry_delay_seconds = 0, 
                    retry_exponential_backoff = True, 
                    sla_seconds = 0, 
                    task_concurrency = 0, 
                    trigger_rule = '', ), 
                description = '', 
                imports = [
                    ''
                    ], 
                is_paused_upon_creation = True, 
                max_active_runs = 0, 
                max_active_tasks = 0, 
                name = '', 
                params = {
                    'key' : ''
                    }, 
                schedule_interval = '', 
                start_date = '', 
                tags = [
                    ''
                    ], 
                timezone = ''
            )
        else :
            return UpdatePipelineRequest(
                name = '',
        )
        """

    def testUpdatePipelineRequest(self):
        """Test UpdatePipelineRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
