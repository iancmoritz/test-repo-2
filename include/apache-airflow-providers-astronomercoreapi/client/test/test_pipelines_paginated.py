# coding: utf-8

"""
    Astro Core API

    Astro Core API  # noqa: E501

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import astronomercoreapi
from astronomercoreapi.models.pipelines_paginated import PipelinesPaginated  # noqa: E501
from astronomercoreapi.rest import ApiException

class TestPipelinesPaginated(unittest.TestCase):
    """PipelinesPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PipelinesPaginated
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PipelinesPaginated`
        """
        model = astronomercoreapi.models.pipelines_paginated.PipelinesPaginated()  # noqa: E501
        if include_optional :
            return PipelinesPaginated(
                limit = 56, 
                offset = 56, 
                pipelines = [
                    astronomercoreapi.models.pipeline.Pipeline(
                        catchup = True, 
                        cell_positions = [
                            ''
                            ], 
                        concurrency = 56, 
                        created_at = '', 
                        created_by = '', 
                        dag_file = '', 
                        dag_run_timeout_seconds = 56, 
                        default_args = astronomercoreapi.models.default_args.DefaultArgs(
                            depends_on_past = True, 
                            email = [
                                ''
                                ], 
                            email_on_failure = True, 
                            email_on_retry = True, 
                            execution_timeout_seconds = 56, 
                            max_retry_delay_seconds = 56, 
                            queue = '', 
                            retries = 56, 
                            retry_delay_seconds = 56, 
                            retry_exponential_backoff = True, 
                            sla_seconds = 56, 
                            task_concurrency = 56, 
                            trigger_rule = '', ), 
                        dependencies = {
                            'key' : [
                                ''
                                ]
                            }, 
                        description = '', 
                        id = '', 
                        imports = [
                            ''
                            ], 
                        is_paused_upon_creation = True, 
                        max_active_runs = 56, 
                        max_active_tasks = 56, 
                        name = '', 
                        organization_id = '', 
                        params = {
                            'key' : ''
                            }, 
                        project_id = '', 
                        schedule_interval = '', 
                        start_date = '', 
                        tags = [
                            ''
                            ], 
                        timezone = '', 
                        updated_at = '', 
                        updated_by = '', 
                        workspace_id = '', )
                    ], 
                total_count = 56
            )
        else :
            return PipelinesPaginated(
                limit = 56,
                offset = 56,
                pipelines = [
                    astronomercoreapi.models.pipeline.Pipeline(
                        catchup = True, 
                        cell_positions = [
                            ''
                            ], 
                        concurrency = 56, 
                        created_at = '', 
                        created_by = '', 
                        dag_file = '', 
                        dag_run_timeout_seconds = 56, 
                        default_args = astronomercoreapi.models.default_args.DefaultArgs(
                            depends_on_past = True, 
                            email = [
                                ''
                                ], 
                            email_on_failure = True, 
                            email_on_retry = True, 
                            execution_timeout_seconds = 56, 
                            max_retry_delay_seconds = 56, 
                            queue = '', 
                            retries = 56, 
                            retry_delay_seconds = 56, 
                            retry_exponential_backoff = True, 
                            sla_seconds = 56, 
                            task_concurrency = 56, 
                            trigger_rule = '', ), 
                        dependencies = {
                            'key' : [
                                ''
                                ]
                            }, 
                        description = '', 
                        id = '', 
                        imports = [
                            ''
                            ], 
                        is_paused_upon_creation = True, 
                        max_active_runs = 56, 
                        max_active_tasks = 56, 
                        name = '', 
                        organization_id = '', 
                        params = {
                            'key' : ''
                            }, 
                        project_id = '', 
                        schedule_interval = '', 
                        start_date = '', 
                        tags = [
                            ''
                            ], 
                        timezone = '', 
                        updated_at = '', 
                        updated_by = '', 
                        workspace_id = '', )
                    ],
                total_count = 56,
        )
        """

    def testPipelinesPaginated(self):
        """Test PipelinesPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
